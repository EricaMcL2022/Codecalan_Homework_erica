---
title: "Tidyverse consolidation homework"
output:html_document
---

```{r}
#Q1 - Load the code_clan_tweets.csv data. Find the number of rows, columns, and list all the variable names.

read.csv("code_clan_tweets.csv")

library(tidyverse)
library(tidyr)
library(dplyr)
library(ggplot2)
library(rebus)
library(skimr)
library(janitor)

names(code_clan_tweets)

clean_names(code_clan_tweets)

```

```{r}
#Q1 
head(code_clan_tweets)
tail(code_clan_tweets)
dim(code_clan_tweets)

```
```{r}

#Q2 Find the total number of favourites (stored in favorite_count) that CodeClan tweets have got. Don’t add a tweet’s favorite_count to the total when the tweet was quoted (see the is_quote variable). so i need to use is_quote as a filter first then sum the counts?

code_clan_tweets %>% filter(is_quote == FALSE) %>% summarise(total = sum(favorite_count))

```

```{r}
#Q3 

mean_retweets <- code_clan_tweets %>% filter(is_quote == FALSE) %>% group_by(source) %>% summarise(average_retweet = mean(retweet_count))

mean_retweets

head(mean_retweets)
  
```
```{r}
#Q4 Count the total number of likes (i.e. total of favorite_count), split by media type, and arrange them from most likes to least. Assume that any tweets without a listed media type are of type “text”.

code_clan_tweets %>% mutate(media_type = coalesce(media_type, "text")) %>%
  group_by(media_type) %>%
  summarise(favourite_count_total = sum(favorite_count)) %>%
  arrange(desc(favourite_count_total))
```

```{r}
#Q5 Find the mean number of characters that a CodeClan tweet contains. You can either find a way to count the text in the text variable, or use the variable display_text_width which contains a count. Checking both would be a good idea if possible to see if they match (but it’s not essential).
code_clan_tweets %>%
  summarise(avg_tweet_length = mean(display_text_width))

code_clan_tweets_text <- code_clan_tweets %>% mutate(count_str_length = str_length(text)) %>% select(count_str_length, display_text_width)

code_clan_tweets_text

```
```{r}
#Q6 The code_clan_info.csv data file contains status_url along with other info. Load this in, and join it to the code_clan_tweets tibble, so that you have a status_url for each tweet. Decide which variable to join the tibbles on.

code_clan_info <- read_csv("code_clan_info.csv")

names(code_clan_info)

code_clan_all <-left_join(code_clan_tweets, code_clan_info, by = "tweet_id")
```

```{r}
#Q7 From your new joined data, create a new tibble codeclan_hashtags containing only tweet_id and hashtags, then convert hashtags into lowercase for analysis. Keep only those tweets with hashtags.

code_clan_hashtags <- code_clan_all %>% select(tweet_id, hashtags) %>% mutate(lowcase_hashtag = str_to_lower(hashtags)) %>% select(-hashtags) %>% drop_na(lowcase_hashtag)

code_clan_hashtags

```
```{r}
#Q8 Some tweets have more than one hashtag, denoted by the c( symbols at the start of the string. Use the str_sub() and str_detect() functions and your codeclan_hashtags tibble from above to find all the cases in which the hashtag string begins with charactersc(.    remember to use mutate before string_sub then str_detect

hashtags_multiple <- code_clan_hashtags %>% mutate(first_letters = str_sub(lowcase_hashtag, 1, 2)) %>% filter(str_detect(first_letters, "c\\("))

hashtags_multiple
```
```{r}
#Q9 Use the str_detect() function to find all tweets with text that mentions “Edinburgh”, and count how many such tweets there are.  this needs to be a mutate intially with an expression to search the text for edinburgh and aand count them

code_clan_tweets %>% mutate(lowcase_tweets = str_to_lower(text)) %>% filter(str_detect(lowcase_tweets, "edinburgh")) %>% summarise(count = n())

```
```{r}
#Q10 Use str_extract_all() with a regular expression to find out which Twitter users CodeClan have been tweeting.   so i need to define a user pattern involving all the numbers and letters, then select the text column and then extract???

user_pattern <- "@[a-zA-Z0-9_]+"

tweets <- code_clan_tweets %>% select(text)

head(str_extract_all(tweets$text, user_pattern))

```
cod
# Learning Objectives 

Be able to explore and wrangle an unseen dataset so as to answer specific questions

**Question 1.**  
Load the `code_clan_tweets.csv` data. Find the number of rows, columns, and list all the variable names. 

# 27 columns containing 234 rows of observations.  the headings are above.

<br>

**Question 2.**  
Find the total number of favourites (stored in `favorite_count`) that CodeClan tweets have got. Don't add a tweet's `favorite_count` to the total when the tweet was quoted (see the `is_quote` variable). 

<br>

**Question 3.**  
Summarise the mean number of retweets (`retweet_count`), split by the type of platform that was used to tweet (`source`). Again, omit quoted tweets from the mean.

<br>

**Question 4.**  
Count the total number of likes (i.e. total of `favorite_count`), split by `media` type, and arrange them from most likes to least. Assume that any tweets without a listed `media` type are of type "text".  

<br>

**Question 5.**  
Find the mean number of characters that a CodeClan tweet contains.  You can either find a way to count the text in the `text` variable, or use the variable `display_text_width` which contains a count. Checking both would be a good idea if possible to see if they match (but it's not essential).  
<br>

**Question 6.**  
The `code_clan_info.csv` data file contains `status_url` along with other info. Load this in, and join it to the `code_clan_tweets` tibble, so that you have a `status_url` for each tweet. Decide which variable to join the tibbles on.  

<br>

**Question 7.**  
From your new joined data, create a new tibble `codeclan_hashtags` containing only `tweet_id` and `hashtags`, then convert `hashtags` into lowercase for analysis. Keep only those tweets with hashtags.

<br>

# Extensions

<br>

**Question 8.**  
Some tweets have more than one hashtag, denoted by the `c(` symbols at the start of the string. Use the `str_sub()` and `str_detect()` functions and your `codeclan_hashtags` tibble from above to find all the cases in which the hashtag string begins with characters`c(`.
<details>
<summary>**Hint**</summary>
Try a regex pattern `"c\\("`. The double backslash is necessary in R to mark a backslash as itself being escaped. 
</details>

<br>

**Question 9.**  
Use the `str_detect()` function to find all tweets with `text` that mentions "Edinburgh", and count how many such tweets there are. 
<details>
<summary>**Hint**</summary>
You may need to make sure your tweets are all the same case before searching.
</details>

<br>

**Question 10.**  
Use `str_extract_all()` with a regular expression to find out which Twitter users CodeClan have been tweeting. 
<details>
<summary>**Hint**</summary>
Think about all the different characters which could be in a Twitter username, do a bit of online research
</details>

